// Copyright 2025 DigitalKin Inc.
//
// Licensed under the GNU General Public License, Version 3.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.gnu.org/licenses/gpl-3.0.html
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package digitalkin.storage.v2;

import "buf/validate/validate.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

// DataType: Enum to data type
enum DataType {
    // OUTPUT: Data generated by the system
    OUTPUT = 0;
    // VIEW: Data to be displayed
    VIEW = 1;
    // LOGS: Logs data
    LOGS = 2;
    // OTHER: Other data
    OTHER = 3;
}

// StorageRecord: Message to represent stored data
message StorageRecord {
    // data: JSON Object to store
    google.protobuf.Struct data = 1 [(buf.validate.field).required = true];
    // mission_id: Mission ID linked to the data
    string mission_id = 2 [(buf.validate.field).required = true, (buf.validate.field).string.prefix = "missions:"];
    // name: Name of the data (unique by mission_id)
    string name = 3 [(buf.validate.field).required = true];
    // creation_date: Creation date of the data
    google.protobuf.Timestamp creation_date = 4 [(buf.validate.field).required = true];
    // update_date: Update date of the data
    google.protobuf.Timestamp update_date = 5 [(buf.validate.field).required = true];
    // data_type: Type of the data
    DataType data_type = 6 [(buf.validate.field).required = true];
}

// StoreRecordRequest: Request to store record
message StoreRecordRequest {
    // data: Data to store or to retrieve
    google.protobuf.Struct data = 1 [(buf.validate.field).required = true];
    // mission_id: Mission ID linked to the data
    string mission_id = 2 [(buf.validate.field).required = true, (buf.validate.field).string.prefix = "missions:"];
    // name: Name of the data (unique by mission_id)
    string name = 3 [(buf.validate.field).required = true];
    // data_type: Type of the data
    DataType data_type = 4 [(buf.validate.field).required = true];
}

// StoreRecordResponse: Response to stored record
message StoreRecordResponse {
    // success: Success of the operation
    bool success = 1 [(buf.validate.field).required = true];
    // stored_data: Stored data
    StorageRecord stored_data = 2 [(buf.validate.field).required = true];
}

// ReadRecordRequest: Request to read a record
message ReadRecordRequest {
    // mission_id: Mission ID linked to the data
    string mission_id = 1 [(buf.validate.field).required = true, (buf.validate.field).string.prefix = "missions:"];
    // name: Name of the data (unique by mission_id)
    string name = 2 [(buf.validate.field).required = true];
}

// ReadRecordResponse: Response after read a record
message ReadRecordResponse {
    // success: Success of the operation
    bool success = 1 [(buf.validate.field).required = true];
    // stored_data: Stored data
    StorageRecord stored_data = 2 [(buf.validate.field).required = true];
}


// ModifyRecordRequest: Request to modify record
message ModifyRecordRequest {
    // data: Data to store or to retrieve
    google.protobuf.Struct data = 1 [(buf.validate.field).required = true];
    // mission_id: Mission ID linked to the data
    string mission_id = 2 [(buf.validate.field).required = true, (buf.validate.field).string.prefix = "missions:"];
    // name: Name of the data (unique by mission_id)
    string name = 3 [(buf.validate.field).required = true];
}

// ModifyRecordResponse: Response to record modification
message ModifyRecordResponse {
    // success: Success of the operation
    bool success = 1 [(buf.validate.field).required = true];
    // stored_data: Stored data
    StorageRecord stored_data = 2 [(buf.validate.field).required = true];
}

// RemoveRecordRequest: Request to remove a record
message RemoveRecordRequest {
    // mission_id: Mission ID linked to the data
    string mission_id = 1 [(buf.validate.field).required = true, (buf.validate.field).string.prefix = "missions:"];
    // name: Name of the data (unique by mission_id)
    string name = 2 [(buf.validate.field).required = true];
}

// RemoveRecordResponse: Response to removed record
message RemoveRecordResponse {
    // success: Success of the operation
    bool success = 1 [(buf.validate.field).required = true];
}