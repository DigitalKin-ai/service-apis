syntax = "proto3";

package digitalkin.kin.v1;

import "google/api/annotations.proto";
import "google/protobuf/any.proto";

service KinWorkflowService {
  // Read
  rpc ReadKinWorkflow(ReadKinWorkflowRequest) returns (stream Workflow) {
    option (google.api.http) = {
      get: "/v1/workflow/{id}"
    };
  }

  // Update
  rpc UpdateNodesWorkflow(UpdateNodeWorkflowRequest) returns (UpdateNodeWorkflowResponse) {
    option (google.api.http) = {
      post: "/v1/workflow/{id}/nodes"
      body: "*"
    };
  }
  rpc UpdateEdgesWorkflow(UpdateEdgeWorkflowRequest) returns (UpdateEdgeWorkflowResponse) {
    option (google.api.http) = {
      post: "/v1/workflow/{id}/edges"
      body: "*"
    };
  }
}

// Common
message DataEdge {
  string color = 1;
  string running = 2;
}

message Edge {
  string id = 1;
  string source = 2;
  string sourceHandle = 3;
  string target = 4;
  string targetHandle = 5;
  string type = 6;
  DataEdge data = 7;
}

message Position {
  float x = 1;
  float y = 2;
}

message Measured {
  int64 width = 1;
  int64 height = 2;
}

message Node {
  string id = 1;
  string type = 2;
  Position position = 3;
  map<string, google.protobuf.Any> data = 4;
  Measured measured = 7;
  bool selected = 8;
  bool dragging = 9;
}

message Workflow {
  repeated Edge edges = 1;
  repeated Node nodes = 2;
}

// Read Kin Workflow
message ReadKinWorkflowRequest {
  string kinId = 1;
}

// Update Node Kin Workflow
message UpdateNodeWorkflowRequest {
  string kinId = 1;
  repeated Node nodes = 2;
}
message UpdateNodeWorkflowResponse {}

// Update Edge Kin Workflow
message UpdateEdgeWorkflowRequest {
  string kinId = 1;
  repeated Edge edges = 2;
}
message UpdateEdgeWorkflowResponse {}
  