// Copyright 2024 DigitalKin Inc.
//
// Licensed under the GNU General Public License, Version 3.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.gnu.org/licenses/gpl-3.0.html
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package digitalkin.assistant.v1;

import "digitalkin/assistant/v1/tool.proto";

import "google/api/field_behavior.proto";

// Assistant
//
// Fields:
//
// - id: The unique identifier of the assistant.
// - system: The model of the assistant.
// - model: The model of the assistant.
// - temperature: The temperature of the assistant.
// - tools: The tools of the assistant.
// - max_tokens: The maximum number of tokens the assistant can generate.
message Assistant {
    // id: The unique identifier of the assistant.
    string id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
    // system: The model of the assistant.
    string system = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
    // model: The model of the assistant.
    Model model = 3 [(google.api.field_behavior) = INPUT_ONLY];
    // temperature: The temperature of the assistant.
    float temperature = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
    // tools: The tools of the assistant.
    repeated Tool tools = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
    // max_tokens: The maximum number of tokens the assistant can generate.
    int32 max_tokens = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// GetSettingsRequest
//
// Fields:
//
// * Temporary: This is a temporary field that will be removed in the future.
// - kin_id: The unique identifier of the assistant.
//
// * In the future, the kin_id field will be removed and replaced with the workflow field.
// - workflow_id: The unique identifier of the workflow.
message GetSettingsRequest {
    // kin_id: The unique identifier of the assistant.
    string kin_id = 1 [(google.api.field_behavior) = REQUIRED];
}

// GetSettingsResponse
//
// Returns:
//
// * Temporary: This is a temporary field that will be removed in the future.
// - assistants: The list of assistants.
//
// * In the future, the assistants field will be removed and replaced with the settings field.
// - settings: The settings of the workflows.
message GetSettingsResponse {
    // assistants: The list of assistants.
    repeated Assistant assistants = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ListAssistantsRequest
//
// Fields:
//
// - organization_id: The unique identifier of the organization.
message ListAssistantsRequest {
    // organization_id: The unique identifier of the organization.
    string organization_id = 1 [(google.api.field_behavior) = REQUIRED];
}

// ListAssistantsResponse
//
// Returns:
//
// - assistants: The list of assistants.
message ListAssistantsResponse {
    // assistants: The list of assistants.
    repeated Assistant assistants = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// CreateAssistantRequest
//
// Fields:
//
// - system: The model of the assistant.
// - model: The model of the assistant.
// - temperature: The temperature of the assistant.
// - tools: The tools of the assistant.
// - max_tokens: The maximum number of tokens the assistant can generate.
message CreateAssistantRequest {
    // system: The model of the assistant.
    string system = 1 [(google.api.field_behavior) = REQUIRED];
    // model: The model of the assistant.
    Model model = 2 [(google.api.field_behavior) = REQUIRED];
    // temperature: The temperature of the assistant.
    float temperature = 3 [(google.api.field_behavior) = REQUIRED];
    // tools: The tools of the assistant.
    repeated Tool tools = 4 [(google.api.field_behavior) = REQUIRED];
    // max_tokens: The maximum number of tokens the assistant can generate.
    int32 max_tokens = 5 [(google.api.field_behavior) = REQUIRED];
}

// UpdateAssistantRequest
//
// Fields:
//
// - assistant_id: The unique identifier of the assistant.
// - system: The model of the assistant.
// - model: The model of the assistant.
// - temperature: The temperature of the assistant.
// - tools: The tools of the assistant.
// - max_tokens: The maximum number of tokens the assistant can generate.
message UpdateAssistantRequest {
    // assistant_id: The unique identifier of the assistant.
    string assistant_id = 1 [(google.api.field_behavior) = REQUIRED];
    // system: The model of the assistant.
    optional string system = 2 [(google.api.field_behavior) = OPTIONAL];
    // model: The model of the assistant.
    optional Model model = 3 [(google.api.field_behavior) = OPTIONAL];
    // temperature: The temperature of the assistant.
    optional float temperature = 4 [(google.api.field_behavior) = OPTIONAL];
    // tools: The tools of the assistant.
    repeated Tool tools = 5 [(google.api.field_behavior) = OPTIONAL];
    // max_tokens: The maximum number of tokens the assistant can generate.
    optional int32 max_tokens = 6 [(google.api.field_behavior) = OPTIONAL];
}

// DeleteAssistantRequest
//
// Fields:
//
// - assistant_id: The unique identifier of the assistant.
message DeleteAssistantRequest {
    // assistant_id: The unique identifier of the assistant.
    string assistant_id = 1 [(google.api.field_behavior) = REQUIRED];
}
