// Copyright 2024 DigitalKin Inc.
//
// Licensed under the GNU General Public License, Version 3.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.gnu.org/licenses/gpl-3.0.html
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// List of available options:
// https://github.com/yoheimuta/protolint/blob/master/_example/config/.protolint.yaml

syntax = "proto3";

package digitalkin.payment.v1;

import "digitalkin/payment/v1/checkout.proto";
import "digitalkin/payment/v1/price.proto";
import "digitalkin/payment/v1/subscription.proto";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// StripeService
service StripeService {
    // ReadSubscriptions
    //
    // ## Parameters
    //
    // - organization_id: Organization id
    //
    // ## Returns
    //
    // - subscriptions: List of subscriptions
    rpc ReadSubscriptions(ReadSubscriptionsRequest) returns (stream ReadSubscriptionsResponse) {
        option (google.api.http) = {
            post: "/v1/payment/{organization_id}/subscriptions"
            body: "*"
        };
    }

    // ReadPrices
    //
    // ## Parameters
    //
    // - Nothing
    //
    // ## Returns
    //
    // - prices: List of prices
    rpc ReadPrices(google.protobuf.Empty) returns (ReadPricesResponse) {
        option (google.api.http) = {
            get: "/v1/payment/prices"
        };
    }

    // CreateCheckoutSession
    //
    // ## Parameters
    //
    // - organization_id: Organization id
    // - price_id: Price id
    // - success_url: Success url
    // - cancel_url: Cancel url
    //
    // ## Returns
    //
    // - url: Checkout url
    rpc CreateCheckoutSession(CreateCheckoutSessionRequest) returns (CreateCheckoutSessionResponse) {
        option (google.api.http) = {
            post: "/v1/payment/{organization_id}/checkout"
            body: "*"
        };
    }

    // CancelSubscription
    //
    // ## Parameters
    //
    // - organization_id: Organization id
    // - subscription_id: Subscription id
    //
    // ## Returns
    //
    // - Ok if the subscription was canceled
    rpc CancelSubscription(CancelSubscriptionRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/payment/{organization_id}/subscriptions/{subscription_id}:cancel"
            body: "*"
        };
    }

    // ChangeSubscription
    //
    // ## Parameters
    //
    // - organization_id: Organization id
    // - subscription_id: Subscription id
    // - new_price_id: New price id
    //
    // ## Returns
    //
    // - Ok if the subscription was changed
    rpc ChangeSubscription(ChangeSubscriptionRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/payment/{organization_id}/subscriptions/{subscription_id}:change"
            body: "*"
        };
    }

    // WebhookHandler
    //
    // ## Parameters
    //
    // - Payload: Webhook payload
    // - Signature: Webhook signature
    //
    // ## Returns
    //
    // - Ok if the webhook was handled
    rpc WebhookHandler(WebhookRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/payment/webhook"
            body: "*"
        };
    }
}
