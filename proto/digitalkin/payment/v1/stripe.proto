syntax = "proto3";

package digitalkin.payment.v1;

service StripeService {
  // Subscription
  rpc ReadSubscriptions(ReadSubscriptionsRequest) returns (stream ReadSubscriptionsResponse);
  rpc CancelSubscription(CancelSubscriptionRequest) returns (CancelSubscriptionResponse);

  // Prices
  rpc ReadPrices(ReadPricesRequest) returns (ReadPricesResponse);

  // Checkout Session
  rpc CreateCheckoutSession(CreateCheckoutSessionRequest) returns (CreateCheckoutSessionResponse);
}

message SubscriptionItem {
  string id = 1;
  optional string metadata = 2;
  optional Price price = 3;
}

enum SubscriptionStatus {
  ACTIVE = 0;
  CANCELED = 1;
  INCOMPLETE = 2;
  INCOMPLETE_EXPIRED = 3;
  PAUSED = 4;
  PAST_DUE = 5;
  TRIALING = 6;
  UNPAID = 7;
}

message Subscription {
  string id = 1;
  repeated SubscriptionItem items = 2;
  int64 start_date = 3;
  SubscriptionStatus status = 4;
}

message Product {
  string id = 1;
  string object = 2;
  string active = 3;
  string attributes = 4;
  string caption = 5;
  string created = 6;
  string deactivate_on = 7;
  string description = 8;
  string images = 9;
  string livemode = 10;
  string metadata = 11;
  string name = 12;
  string package_dimensions = 13;
  string shippable = 14;
  string statement_descriptor = 15;
  string type = 16;
  string unit_label = 17;
  string updated = 18;
  string url = 19;
}

message Recurring {
  string aggregate_usage = 1;
  string interval = 2;
  string interval_count = 3;
  string trial_period_days = 4;
  string usage_type = 5;
}

message Metadata {
  string key = 1;
  int64 value = 2;
}

message Price {
  string id = 1;
  string object = 2;
  string active = 3;
  string billing_scheme = 4;
  string created = 5;
  string currency = 6;
  string livemode = 7;
  string lookup_key = 8;
  Metadata metadata = 9;
  string nickname = 10;
  Product product = 11;
  Recurring recurring = 12;
  string tiers = 13;
  string transform_quantity = 14;
  string type = 15;
  string unit_amount = 16;
  string unit_amount_decimal = 17;
  string updated = 18;
}

// Read Subscriptions
message ReadSubscriptionsRequest {
  string email = 1;
}
message ReadSubscriptionsResponse {
  repeated Subscription subscriptions = 1;
}

// Cancel Subscription
message CancelSubscriptionRequest {
  string subscription_id = 1;
}
message CancelSubscriptionResponse {}

// Read Prices
message ReadPricesRequest {}
message ReadPricesResponse {
  repeated Price prices = 1;
}

// Create Checkout Session
message CreateCheckoutSessionRequest {
  string customer_id = 1;
  string price_id = 2;
}
message CreateCheckoutSessionResponse {
  string url = 1;
}
