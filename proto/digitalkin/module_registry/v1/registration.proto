// Copyright 2024 DigitalKin Inc.
//
// Licensed under the GNU General Public License, Version 3.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.gnu.org/licenses/gpl-3.0.html
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package digitalkin.module_registry.v1;

import "buf/validate/validate.proto";

// RegisterRequest
//
// Fields:
//
// - module_id: Id of the module 
// - module_type: Type of the module (trigger, tool, kin, view)
// - address: Address used to communicate with the module
// - port: Port used to communicate with the module
message RegisterRequest {
    // module_id: Id of the module
    string module_id = 1 [(buf.validate.field).string.min_len = 1, (buf.validate.field).required = true];
    // module_type: Type of the module (trigger, tool, kin, view)
    string module_type = 2 [(buf.validate.field).string.in = "trigger", (buf.validate.field).string.in = "tool", (buf.validate.field).string.in = "kin", (buf.validate.field).string.in = "view", (buf.validate.field).required = true];
    // address: Address used to communicate with the module
    string address = 3 [(buf.validate.field).string.min_len = 1, (buf.validate.field).required = true];
    // port: Port used to communicate with the module
    int32 port = 4 [(buf.validate.field).int32 = { gte: 1, lte: 65535}];
}

// RegisterResponse
//
// Returns:
//
// - success: True if the registration was successful
message RegisterResponse {
    // success: True if the registration was successful
    bool success = 1;
}

// DeregisterRequest
//
// Fields:
//
// - module_id: Id of the module
message DeregisterRequest {
    // module_id: Id of the module
    string module_id = 1 [(buf.validate.field).string.min_len = 1, (buf.validate.field).required = true];
}

// DeregisterResponse
//
// Returns:
//
// - success: True if the registration was successful
message DeregisterResponse {
    // success: True if the registration was successful
    bool success = 1;
}