// Copyright 2025 DigitalKin Inc.
//
// Licensed under the GNU General Public License, Version 3.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.gnu.org/licenses/gpl-3.0.html
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package digitalkin.module.v2;

import "digitalkin/module/v2/information.proto";
import "digitalkin/module/v2/lifecycle.proto";
import "digitalkin/module/v2/monitoring.proto";

// ModuleService
// It represents a functional unit within an agent in the multi-agent system (SMA). 
// Modules can be of three types: Kin, Tool, and Trigger. 
// - Kin: Represents the agent's core data architecture or "brain", such as a workflow-based model or an LLM (Large Language Model).
// - Tool: Refers to external utilities or tools that the agent uses to perform tasks or enhance its capabilities.
// - Trigger: Serves as the entry point for the agent, initiating processes or actions based on external inputs.
// This service manages the lifecycle and interactions of these modules, including starting, stopping, 
// and monitoring the module's status, as well as handling input and output operations.
service ModuleService {
    // StartModule
    rpc StartModule (StartModuleRequest) returns (stream StartModuleResponse);
    // StopModule
    rpc StopModule (StopModuleRequest) returns (StopModuleResponse);
    // GetModuleStatus
    rpc GetModuleStatus (GetModuleStatusRequest) returns (GetModuleStatusResponse);
    // GetModuleJobs
    rpc GetModuleJobs (GetModuleJobsRequest) returns (GetModuleJobsResponse);
    // GetModuleInput
    rpc GetModuleInput (GetModuleInputRequest) returns (GetModuleInputResponse);
    // GetModuleOutput
    rpc GetModuleOutput (GetModuleOutputRequest) returns (GetModuleOutputResponse);
    // GetModuleSetup
    rpc GetModuleSetup (GetModuleSetupRequest) returns (GetModuleSetupResponse);
    // GetModuleSecret
    rpc GetModuleSecret (GetModuleSecretRequest) returns (GetModuleSecretResponse);
}
  