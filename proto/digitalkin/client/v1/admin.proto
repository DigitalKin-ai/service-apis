// Copyright 2024 DigitalKin Inc.
//
// Licensed under the GNU General Public License, Version 3.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.gnu.org/licenses/gpl-3.0.html
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// List of available options:
// https://github.com/yoheimuta/protolint/blob/master/_example/config/.protolint.yaml

syntax = "proto3";

package digitalkin.client.v1;

import "google/api/annotations.proto";
import "digitalkin/common/v1/common.proto";

// AdminService
service AdminService {
  // ReadUsersAdmin
  //
  // ## Parameters
  //
  // - Nothing
  //
  // ## Returns
  //
  // - A stream of users
  rpc ReadUsersAdmin(ReadUsersAdminRequest) returns (stream ReadUsersAdminResponse) {
    option (google.api.http) = {
      get: "/v1/admin/users"
    };
  }

  // ReadOrganizationsAdmin
  //
  // ## Parameters
  //
  // - Nothing
  //
  // ## Returns
  //
  // - A stream of organizations
  rpc ReadOrganizationsAdmin(ReadOrganizationsAdminRequest) returns (stream ReadOrganizationsAdminResponse) {
    option (google.api.http) = {
      get: "/v1/admin/organizations"
    };
  }

  // ReadKinsAdmin
  //
  // ## Parameters
  //
  // - Nothing
  //
  // ## Returns
  //
  // - A stream of kins
  rpc ReadKinsAdmin(ReadKinsAdminRequest) returns (stream ReadKinsAdminResponse) {
    option (google.api.http) = {
      get: "/v1/admin/kins"
    };
  }
}

// UserAdminReply
//
// ## Fields
//
// - user_name: User name
// - activated: Is the user activated
// - nb_kins: Number of kins
// - nb_organizations: Number of organizations
message UserAdminReply {
  // user_name: User name
  string user_name = 1;
  // activated: Is the user activated
  bool activated = 2;
  // nb_kins: Number of kins
  optional int64 nb_kins = 3;
  // nb_organizations: Number of organizations
  optional int64 nb_organizations = 4;
}

// OrganizationAdminReply
//
// ## Fields
//
// - id: Organization ID
// - name: Organization name
// - activated: Is the organization activated
// - nb_members: Number of members
// - nb_kins: Number of kins
message OrganizationAdminReply {
  // id: Organization ID
  digitalkin.common.v1.Thing id = 1;
  // name: Organization name
  string name = 2;
  // activated: Is the organization activated
  bool activated = 3;
  // nb_members: Number of members
  optional int64 nb_members = 4;
  // nb_kins: Number of kins
  optional int64 nb_kins = 5;
}

// KinAdminReply
//
// ## Fields
//
// - id: Kin ID
// - name: Kin name
// - activated: Is the kin activated
// - nb_members: Number of members
// - nb_organizations: Number of organizations
// - nb_threads: Number of threads
message KinAdminReply {
  // id: Kin ID
  digitalkin.common.v1.Thing id = 1;
  // name: Kin name
  string name = 2;
  // activated: Is the kin activated
  bool activated = 3;
  // nb_members: Number of members
  optional int64 nb_members = 4;
  // nb_organizations: Number of organizations
  optional int64 nb_organizations = 5;
  // nb_threads: Number of threads
  optional int64 nb_threads = 6;
}

// ReadUsersAdminRequest
//
// ## Fields
//
// - Nothing
message ReadUsersAdminRequest {
}

// ReadUsersAdminResponse0
//
// ## Returns
//
// - A stream of users
message ReadUsersAdminResponse {
  // users: A stream of users
  repeated UserAdminReply users = 1;
}

// ReadOrganizationsAdminRequest
//
// ## Fields
//
// - Nothing
message ReadOrganizationsAdminRequest {
}

// ReadOrganizationsAdminResponse0
//
// ## Returns
//
// - A stream of organizations
message ReadOrganizationsAdminResponse {
  // organizations: A stream of organizations
  repeated OrganizationAdminReply organizations = 1;
}

// ReadKinsAdminRequest
//
// ## Fields
//
// - Nothing
message ReadKinsAdminRequest {
}

// ReadKinsAdminResponse0
//
// ## Returns
//
// - A stream of kins
message ReadKinsAdminResponse {
  // kins: A stream of kins
  repeated KinAdminReply kins = 1;
}
