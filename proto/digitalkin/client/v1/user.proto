syntax = "proto3";

package digitalkin.client.v1;

import "digitalkin/client/v1/organization.proto";

service UserService {
    // CRD
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc ReadUser(ReadUserRequest) returns (stream User);
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);

    // Update
    rpc UpdateAvatar(stream UpdateUserAvatarRequest) returns (UpdateUserAvatarResponse);
    rpc UpdateEmail(UpdateUserEmailRequest) returns (UpdateUserEmailResponse);
    rpc UpdateFirstName(UpdateUserFirstNameRequest) returns (UpdateUserFirstNameResponse);
    rpc UpdateLastName(UpdateUserLastNameRequest) returns (UpdateUserLastNameResponse);
    rpc UpdatePassword(UpdateUserPasswordRequest) returns (UpdateUserPasswordResponse);
    rpc updateUserName(UpdateUserNameRequest) returns (UpdateUserNameResponse);
    rpc updateCustomer(UpdateCustomerRequest) returns (UpdateCustomerResponse);

    // Organization
    rpc AddOrganization(AddUserOrganizationRequest) returns (AddUserOrganizationResponse);
    rpc RemoveOrganization(RemoveUserOrganizationRequest) returns (RemoveUserOrganizationResponse);
}

// Common
message OrganizationReply {
  string id = 1;
  string name = 2;
  optional string description = 3;
  bool activated = 4;
}

message User {
  string user_name = 1;
  optional string first_name = 3;
  optional string last_name = 4;
  string email = 5;
  optional string avatar = 6;
  repeated OrganizationReply organizations = 7;
  optional string customer_id = 8;
  optional string subscription = 9;
  optional int64 credit_amount = 10;
  bool activated = 11;
  bool is_admin = 12;
}

// Create a new user
message CreateUserRequest {
    string user_name = 1;
    string email = 2;
    string password = 3;
    optional string invitation_code = 4;
    optional string first_name = 5;
    optional string last_name = 6;
}
message CreateUserResponse {}

// Read a user
message ReadUserRequest {
    string user_id = 1;
}

// Delete a user
message DeleteUserRequest {}
message DeleteUserResponse {}

// Update a user avatar
message UpdateUserAvatarRequest {
    bytes avatar = 1;
}
message UpdateUserAvatarResponse {}

// Update a user email
message UpdateUserEmailRequest {
    string email = 1;
}
message UpdateUserEmailResponse {}

// Update a user first name
message UpdateUserFirstNameRequest {
    string first_name = 1;
}
message UpdateUserFirstNameResponse {}

// Update a user last name
message UpdateUserLastNameRequest {
    string last_name = 1;
}
message UpdateUserLastNameResponse {}

// Update a user password
message UpdateUserPasswordRequest {
    string old_password = 1;
    string new_password = 2;
}
message UpdateUserPasswordResponse {}

// Update a user user name
message UpdateUserNameRequest {
    string user_name = 1;
}
message UpdateUserNameResponse {}

// Update a user customer
message UpdateCustomerRequest {
    string customer_id = 1;
}
message UpdateCustomerResponse {}

// Add a user organization
message AddUserOrganizationRequest {
    string invitation_code = 1;
}
message AddUserOrganizationResponse {}

// Remove a user organization
message RemoveUserOrganizationRequest {
    string organization_id = 1;
}
message RemoveUserOrganizationResponse {}

