syntax = "proto3";

package digitalkin.client.v1;

import "google/api/annotations.proto";

import "digitalkin/client/v1/organization.proto";

service UserService {
    // CRD
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/v1/user"
            body: "*"
        };
    }
    rpc ReadUser(ReadUserRequest) returns (stream User) {
        option (google.api.http) = {
            get: "/v1/user/{user_id}"
        };
    }
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
        option (google.api.http) = {
            delete: "/v1/user/{user_id}"
        };
    }

    // Update
    rpc UpdateAvatar(stream UpdateUserAvatarRequest) returns (UpdateUserAvatarResponse) {
        option (google.api.http) = {
            patch: "/v1/user/{user_id}/avatar"
            body: "*"
        };
    }
    rpc UpdateEmail(UpdateUserEmailRequest) returns (UpdateUserEmailResponse) {
        option (google.api.http) = {
            patch: "/v1/user/{user_id}/email"
            body: "*"
        };
    }
    rpc UpdateFirstName(UpdateUserFirstNameRequest) returns (UpdateUserFirstNameResponse) {
        option (google.api.http) = {
            patch: "/v1/user/{user_id}/first_name"
            body: "*"
        };
    }
    rpc UpdateLastName(UpdateUserLastNameRequest) returns (UpdateUserLastNameResponse) {
        option (google.api.http) = {
            patch: "/v1/user/{user_id}/last_name"
            body: "*"
        };
    }
    rpc UpdatePassword(UpdateUserPasswordRequest) returns (UpdateUserPasswordResponse) {
        option (google.api.http) = {
            patch: "/v1/user/{user_id}/password"
            body: "*"
        };
    }
    rpc updateUserName(UpdateUserNameRequest) returns (UpdateUserNameResponse) {
        option (google.api.http) = {
            patch: "/v1/user/{user_id}/user_name"
            body: "*"
        };
    }
    rpc updateCustomer(UpdateCustomerRequest) returns (UpdateCustomerResponse) {
        option (google.api.http) = {
            patch: "/v1/user/{user_id}/customer"
            body: "*"
        };
    }

    // Organization
    rpc AddOrganization(AddUserOrganizationRequest) returns (AddUserOrganizationResponse) {
        option (google.api.http) = {
            post: "/v1/user/{user_id}/organization"
            body: "*"
        };
    }
    rpc RemoveOrganization(RemoveUserOrganizationRequest) returns (RemoveUserOrganizationResponse) {
        option (google.api.http) = {
            delete: "/v1/user/{user_id}/organization/{organization_id}"
        };
    }
}

// Common
message OrganizationReply {
  string id = 1;
  string name = 2;
  optional string subscription = 3;
  bool activated = 4;
}

message User {
  string user_name = 1;
  optional string first_name = 3;
  optional string last_name = 4;
  string email = 5;
  optional string avatar = 6;
  repeated OrganizationReply organizations = 7;
  optional string customer_id = 8;
  optional string subscription = 9;
  optional int64 credit_amount = 10;
  bool activated = 11;
  bool is_admin = 12;
}

// Create a new user
message CreateUserRequest {
    string user_name = 1;
    string email = 2;
    string password = 3;
    optional string invitation_code = 4;
    optional string first_name = 5;
    optional string last_name = 6;
}
message CreateUserResponse {}

// Read a user
message ReadUserRequest {
    string user_id = 1;
}

// Delete a user
message DeleteUserRequest {}
message DeleteUserResponse {}

// Update a user avatar
message UpdateUserAvatarRequest {
    bytes avatar = 1;
}
message UpdateUserAvatarResponse {}

// Update a user email
message UpdateUserEmailRequest {
    string email = 1;
}
message UpdateUserEmailResponse {}

// Update a user first name
message UpdateUserFirstNameRequest {
    string first_name = 1;
}
message UpdateUserFirstNameResponse {}

// Update a user last name
message UpdateUserLastNameRequest {
    string last_name = 1;
}
message UpdateUserLastNameResponse {}

// Update a user password
message UpdateUserPasswordRequest {
    string old_password = 1;
    string new_password = 2;
}
message UpdateUserPasswordResponse {}

// Update a user user name
message UpdateUserNameRequest {
    string user_name = 1;
}
message UpdateUserNameResponse {}

// Update a user customer
message UpdateCustomerRequest {
    string customer_id = 1;
}
message UpdateCustomerResponse {}

// Add a user organization
message AddUserOrganizationRequest {
    string invitation_code = 1;
}
message AddUserOrganizationResponse {}

// Remove a user organization
message RemoveUserOrganizationRequest {
    string organization_id = 1;
}
message RemoveUserOrganizationResponse {}

