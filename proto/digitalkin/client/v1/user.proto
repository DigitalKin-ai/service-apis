syntax = "proto3";

package digitalkin.client.v1;

import "google/api/annotations.proto";

import "digitalkin/client/v1/organization.proto";

service UserService {
    // CRD
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/v1/user"
            body: "*"
        };
    }
    rpc ReadUser(ReadUserRequest) returns (stream User) {
        option (google.api.http) = {
            get: "/v1/user/"
        };
    }
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
        option (google.api.http) = {
            delete: "/v1/user"
        };
    }

    // Update
    rpc UpdateActivated(UpdateUserActivatedRequest) returns (UpdateUserActivatedResponse) {
        option (google.api.http) = {
            patch: "/v1/user/activated"
            body: "*"
        };
    }
    rpc UpdateEmail(UpdateUserEmailRequest) returns (UpdateUserEmailResponse) {
        option (google.api.http) = {
            patch: "/v1/user/email"
            body: "*"
        };
    }
    rpc UpdateFirstName(UpdateUserFirstNameRequest) returns (UpdateUserFirstNameResponse) {
        option (google.api.http) = {
            patch: "/v1/user/first_name"
            body: "*"
        };
    }
    rpc UpdateLastName(UpdateUserLastNameRequest) returns (UpdateUserLastNameResponse) {
        option (google.api.http) = {
            patch: "/v1/user/last_name"
            body: "*"
        };
    }
    rpc UpdatePassword(UpdateUserPasswordRequest) returns (UpdateUserPasswordResponse) {
        option (google.api.http) = {
            patch: "/v1/user/password"
            body: "*"
        };
    }
    rpc UpdateUserName(UpdateUserNameRequest) returns (UpdateUserNameResponse) {
        option (google.api.http) = {
            patch: "/v1/user/user_name"
            body: "*"
        };
    }
    rpc UpdateUserUsageType(UpdateUserUsageTypeRequest) returns (UpdateUserUsageTypeResponse) {
        option (google.api.http) = {
            patch: "/v1/user/usage_type"
            body: "*"
        };
    }

    // Organization
    rpc AddOrganization(AddUserOrganizationRequest) returns (OrganizationReply) {
        option (google.api.http) = {
            post: "/v1/user/organization"
            body: "*"
        };
    }
    rpc RemoveOrganization(RemoveUserOrganizationRequest) returns (RemoveUserOrganizationResponse) {
        option (google.api.http) = {
            delete: "/v1/user/organization/{organization_id}"
        };
    }

    // Kin
    rpc AddFavKin(AddUserKinRequest) returns (KinReply) {
        option (google.api.http) = {
            post: "/v1/user/kin"
            body: "*"
        };
    }
    rpc RemoveFavKin(RemoveUserKinRequest) returns (RemoveUserKinResponse) {
        option (google.api.http) = {
            delete: "/v1/user/kin/{kin_id}"
        };
    }
}

// Common
message OrganizationReply {
    string id = 1;
    string name = 2;
    repeated string kins = 3;
    optional int64 credit_amount = 4;
    bool is_owner = 5;
    bool activated = 6;
}

message User {
    string user_name = 2;
    optional string first_name = 3;
    optional string last_name = 4;
    string email = 5;
    optional string avatar = 6;
    repeated OrganizationReply organizations = 7;
    repeated KinReply fav_kins = 8;
    optional int64 credit_amount = 9;
    repeated string usage_type = 10;
    bool activated = 11;
    bool is_admin = 12;
}

// Create a new user
message CreateUserRequest {
    string user_name = 1;
    string email = 2;
    string password = 3;
    optional string invitation_code = 4;
    optional string first_name = 5;
    optional string last_name = 6;
}
message CreateUserResponse {
    string token = 1;
}

// Read a user
message ReadUserRequest {
}

// Delete a user
message DeleteUserRequest {
}
message DeleteUserResponse {}

// Update a user activated
message UpdateUserActivatedRequest {
    string userName = 1;
    bool activated = 2;
}
message UpdateUserActivatedResponse {}

// Update a user email
message UpdateUserEmailRequest {
    string email = 1;
}
message UpdateUserEmailResponse {}

// Update a user first name
message UpdateUserFirstNameRequest {
    string first_name = 1;
}
message UpdateUserFirstNameResponse {}

// Update a user last name
message UpdateUserLastNameRequest {
    string last_name = 1;

}
message UpdateUserLastNameResponse {}

// Update a user password
message UpdateUserPasswordRequest {
    string old_password = 1;
    string new_password = 2;
}
message UpdateUserPasswordResponse {}

// Update a user user name
message UpdateUserNameRequest {
    string user_name = 1;
}
message UpdateUserNameResponse {}

// Update a user usage type
message UpdateUserUsageTypeRequest {
    repeated string usage_type = 1;
}
message UpdateUserUsageTypeResponse {}

// Add a user organization
message AddUserOrganizationRequest {
    string invitation_code = 1;
}

// Remove a user organization
message RemoveUserOrganizationRequest {
    string organization_id = 1;
}
message RemoveUserOrganizationResponse {}

// Add a user kin
message AddUserKinRequest {
    string kin_id = 1;
}

// Remove a user kin
message RemoveUserKinRequest {
    string kin_id = 1;
}
message RemoveUserKinResponse {}

