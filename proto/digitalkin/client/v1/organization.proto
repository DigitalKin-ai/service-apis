syntax = "proto3";

package digitalkin.client.v1;

import "google/api/annotations.proto";

service OrganizationService {
    // CRD
    rpc CreateOrganization(CreateOrganizationRequest) returns (Organization) {
        option (google.api.http) = {
            post: "/v1/organization"
            body: "*"
        };
    }
    rpc ReadOrganization(ReadOrganizationRequest) returns (stream Organization) {
        option (google.api.http) = {
            get: "/v1/organization/{organization_id}"
        };
    }
    rpc DeleteOrganization(DeleteOrganizationRequest) returns (DeleteOrganizationResponse) {
        option (google.api.http) = {
            delete: "/v1/organization/{organization_id}"
        };
    }

    // Update
    rpc UpdateActivated(UpdateOrganizationActivatedRequest) returns (UpdateOrganizationActivatedResponse) {
        option (google.api.http) = {
            patch: "/v1/organization/{organization_id}/activated"
            body: "*"
        };
    }
    rpc UpdateName(UpdateOrganizationNameRequest) returns (UpdateOrganizationNameResponse) {
        option (google.api.http) = {
            patch: "/v1/organization/{organization_id}/name"
            body: "*"
        };
    }
    rpc UpdateCreditAmount(UpdateOrganizationCreditAmountRequest) returns (UpdateOrganizationCreditAmountResponse) {
        option (google.api.http) = {
            patch: "/v1/organization/{organization_id}/creditamount"
            body: "*"
        };
    }

    // Protected
    rpc RequestChangeEmail(ChangeOrganizationEmailRequest) returns (ChangeOrganizationEmailResponse) {
        option (google.api.http) = {
            post: "/v1/organization/{organization_id}/email/request"
            body: "*"
        };
    }
    rpc UpdateEmail(UpdateOrganizationEmailRequest) returns (UpdateOrganizationEmailResponse) {
        option (google.api.http) = {
            patch: "/v1/organization/{organization_id}/email"
            body: "*"
        };
    }


    // User
    rpc AddUser(AddOrganizationUserRequest) returns (UserReply) {
        option (google.api.http) = {
            post: "/v1/organization/{organization_id}/user"
            body: "*"
        };
    }
    rpc RemoveUser(RemoveOrganizationUserRequest) returns (RemoveOrganizationUserResponse) {
        option (google.api.http) = {
            delete: "/v1/organization/{organization_id}/user/{user_name}"
        };
    }
    rpc AddModerator(AddOrganizationModeratorRequest) returns (UserReply) {
        option (google.api.http) = {
            post: "/v1/organization/{organization_id}/moderator"
            body: "*"
        };
    }
    rpc RemoveModerator(RemoveOrganizationModeratorRequest) returns (RemoveOrganizationModeratorResponse) {
        option (google.api.http) = {
            delete: "/v1/organization/{organization_id}/moderator/{user_name}"
        };
    }
    rpc AddKin(AddOrganizationKinRequest) returns (KinReply) {
        option (google.api.http) = {
            post: "/v1/organization/{organization_id}/kin"
            body: "*"
        };
    }
    rpc RemoveKin(RemoveOrganizationKinRequest) returns (RemoveOrganizationKinResponse) {
        option (google.api.http) = {
            delete: "/v1/organization/{organization_id}/kin/{kin_id}"
        };
    }
    rpc ChangeOwner(ChangeOrganizationOwnerRequest) returns (ChangeOrganizationOwnerResponse) {
        option (google.api.http) = {
            patch: "/v1/organization/{organization_id}/owner"
            body: "*"
        };
    }

    // Other
    rpc RegenerateInvitationCode(RegenerateOrganizationInvitationCodeRequest) returns (RegenerateOrganizationInvitationCodeResponse) {
        option (google.api.http) = {
            put: "/v1/organization/{organization_id}/invitationcode"
            body: "*"
        };
    }
}

// Common
message UserReply {
    string user_name = 1;
    optional string first_name = 2;
    optional string last_name = 3;
    string email = 4;
    optional string avatar = 5;
    bool activated = 6;
}

message KinReply {
    string id = 1;
    string name = 2;
    optional string description = 3;
    bool activated = 4;
}

message Organization {
    string id = 1;
    string name = 2;
    string email = 3;
    UserReply owner = 4;
    string invitation_code = 5;
    repeated UserReply moderators = 6;
    repeated UserReply users = 7;
    repeated KinReply kins = 8;
    optional int64 credit_amount = 9;
    bool activated = 10;
}

// Create Organization
message CreateOrganizationRequest {
    string name = 1;
    string email = 2;
}

// Read Organization
message ReadOrganizationRequest {
    string organization_id = 1;
}

// Delete Organization
message DeleteOrganizationRequest {
    string organization_id = 1;
}
message DeleteOrganizationResponse {}

// Update Organization activated status
message UpdateOrganizationActivatedRequest {
    string organization_id = 1;
    bool activated = 2;
}
message UpdateOrganizationActivatedResponse {}

// Update Organization name
message UpdateOrganizationNameRequest {
    string organization_id = 1;
    string name = 2;
}
message UpdateOrganizationNameResponse {}

// Request Change Email
message ChangeOrganizationEmailRequest {}
message ChangeOrganizationEmailResponse {}

// Update Organization email
message UpdateOrganizationEmailRequest {
    string organization_id = 1;
    string email = 2;
    string temp_key = 3;
}
message UpdateOrganizationEmailResponse {}

// Update Organization credit amount
message UpdateOrganizationCreditAmountRequest {
    string organization_id = 1;
    int64 credit_amount = 2;
}
message UpdateOrganizationCreditAmountResponse {}

// Add User
message AddOrganizationUserRequest {
    string organization_id = 1;
    string user_name = 2;
}

// Remove User
message RemoveOrganizationUserRequest {
    string organization_id = 1;
    string user_name = 2;
}
message RemoveOrganizationUserResponse {}

// Add Moderator
message AddOrganizationModeratorRequest {
    string organization_id = 1;
    string user_name = 2;
}

// Remove Moderator
message RemoveOrganizationModeratorRequest {
    string organization_id = 1;
    string user_name = 2;
}
message RemoveOrganizationModeratorResponse {}

// Add Kin
message AddOrganizationKinRequest {
    string organization_id = 1;
    string kin_id = 2;
}

// Remove Kin
message RemoveOrganizationKinRequest {
    string organization_id = 1;
    string kin_id = 2;
}
message RemoveOrganizationKinResponse {}

// Change Owner
message ChangeOrganizationOwnerRequest {
    string organization_id = 1;
    string user_name = 2;
}
message ChangeOrganizationOwnerResponse {}

// Regenerate Invitation Code
message RegenerateOrganizationInvitationCodeRequest {
    string organization_id = 1;
    string name = 2;
}
message RegenerateOrganizationInvitationCodeResponse {}
