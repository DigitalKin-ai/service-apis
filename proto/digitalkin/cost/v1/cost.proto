// Copyright 2025 DigitalKin Inc.
//
// Licensed under the GNU General Public License, Version 3.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.gnu.org/licenses/gpl-3.0.html
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package digitalkin.cost.v1;

import "buf/validate/validate.proto";

// CostType: Enum for the type of cost
enum CostType {
    // OTHER: Other type of cost
    OTHER = 0;
    // TOKEN_INPUT: Token input cost
    TOKEN_INPUT = 1;
    // TOKEN_OUTPUT: Token output cost
    TOKEN_OUTPUT = 2;
    // API_CALL: API call cost
    API_CALL = 3;
    // STORAGE: Storage cost
    STORAGE = 4;
    // TIME: Time cost
    TIME = 5;
}

// Cost: Message to represent a cost
message Cost {
    // cost: The cost value
    double cost = 1;
    // mission_id: Mission ID linked to the cost
    string mission_id = 2;
    // name: Name of the cost (unique by mission_id)
    string name = 3;
    // type: Type of the cost
    CostType type = 4;
    // unit: Unit of the cost
    string unit = 5;
}

// AddCostRequest: Request to add a cost
message AddCostRequest {
    // cost: The cost value
    double cost = 1;
    // mission_id: Mission ID linked to the cost
    string mission_id = 2;
    // name: Name of the cost (unique by mission_id)
    string name = 3;
    // type: Type of the cost
    CostType type = 4;
    // unit: Unit of the cost
    string unit = 5;
}

// AddCostResponse: Response to added cost
message AddCostResponse {
    // success: Success of the operation
    bool success = 1;
}

// GetCostsByMissionRequest: Request to get costs by mission
message GetCostsByMissionRequest {
    // mission_id: Mission ID linked to the cost
    string mission_id = 1;
}

// GetCostsByMissionResponse: Response to get costs by mission
message GetCostsByMissionResponse {
    // costs: Costs
    repeated Cost costs = 1;
}

// GetCostsByNameRequest: Request to get costs by name
message GetCostsByNameRequest {
    // mission_id: Mission ID linked to the cost
    string mission_id = 1;
    // name: Name of the cost (unique by mission_id)
    string name = 2;
}

// GetCostsByNameResponse: Response to get costs by name
message GetCostsByNameResponse {
    // costs: Costs
    repeated Cost costs = 1;
}

// GetCostsByTypeRequest: Request to get costs by type
message GetCostsByTypeRequest {
    // mission_id: Mission ID linked to the cost
    string mission_id = 1;
    // type: Type of the cost
    CostType type = 2;
}

// GetCostsByTypeResponse: Response to get costs by type
message GetCostsByTypeResponse {
    // costs: Costs
    repeated Cost costs = 1;
}