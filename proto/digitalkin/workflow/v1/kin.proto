// Copyright 2024 DigitalKin Inc.
//
// Licensed under the GNU General Public License, Version 3.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.gnu.org/licenses/gpl-3.0.html
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package digitalkin.project.v1;

import "google/api/annotations.proto";

import "digitalkin/common/v1/common.proto";
import "digitalkin/kin/v1/kin_response.proto";
import "digitalkin/kin/v1/kin_thread.proto";

// StoreService
service StoreService {
  // CreateKin
  //
  // ## Parameters
  //
  // - name: Kin name
  // - description: Kin description
  // - origin_address: Kin origin address
  //
  // ## Returns
  //
  // - Kin
  rpc CreateKin(CreateKinRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/kin/create"
      body: "*"
    };
  }

  // ReadKin
  //
  // ## Parameters
  //
  // - kin_id: Kin id
  //
  // ## Returns
  //
  // - Kin
  rpc ReadKin(ReadKinRequest) returns (stream Kin) {
    option (google.api.http) = {
      get: "/v1/kin/{kin_id}"
    };
  }

  // DeleteKin
  //
  // ## Parameters
  //
  // - kin_id: Kin id
  //
  // ## Returns
  //
  // - Ok if the Kin was deleted
  rpc DeleteKin(DeleteKinRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/kin/{kin_id}"
    };
  }

  // UpdateActivated
  //
  // ## Parameters
  //
  // - kin_id: Kin id
  // - activated: Kin activated status
  //
  // ## Returns
  //
  // - Ok if the Kin was updated
  rpc UpdateActivated(UpdateKinActivatedRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/v1/kin/{kin_id}/activated"
      body: "*"
    };
  }

  // UpdateOriginAddress
  //
  // ## Parameters
  //
  // - kin_id: Kin id
  // - origin_address: Kin origin address
  //
  // ## Returns
  //
  // - Ok if the Kin origin address was updated
  rpc UpdateOriginAddress(UpdateKinOriginAddressRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/v1/kin/{kin_id}/origin"
      body: "*"
    };
  }

  // UpdateKinInterface
  //
  // ## Paramerters
  //
  // - kin_id: Kin id
  // - interface_url: Interface url
  //
  // ## Returns
  //
  // - Ok if the link was updated
  rpc UpdateKinInterface(UpdateKinInterfaceRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/kin/{kin_id}/interface"
      body: "*"
    };
  }
}


// Kin
//
// ## Fields
//
// - id: Kin id
// - name: Kin name
// - description: Kin description
// - origin_address: Kin origin address
// - interface_address: Kin interface address
// - kin_threads: Kin threads
// - activated: Kin activated status
message Kin {
  // id: Kin id
  string id = 1;
  // name: Kin name
  string name = 2;
  // description: Kin description
  optional string description = 3;
  // origin_address: Kin origin address
  string origin_address = 4;
  // interface_address: Kin interface address
  optional string interface_address = 5;
  // kin_threads: Kin threads
  repeated digitalkin.common.v1.KinThreadReply kin_threads = 6;
  // activated: Kin activated status
  bool activated = 7;
}

// CreateKinRequest
//
// ## Fields
//
// - name: Kin name
// - description: Kin description
// - origin_address: Kin origin address
message CreateKinRequest {
  // name: Kin name
  string name = 1;
  // description: Kin description
  optional string description = 2;
  // origin_address: Kin origin address
  string origin_address = 3;
}

// ReadKinRequest
//
// ## Fields
//
// - kin_id: Kin id
message ReadKinRequest {
  // kin_id: Kin id
  string kin_id = 1;
}

// ReadAllKinRequest
//
// ## Fields
//
// - Nothing
message ReadAllKinRequest {
}

// DeleteKinRequest
//
// ## Fields
//
// - kin_id: Kin id
message DeleteKinRequest {
  // kin_id: Kin id
  string kin_id = 1;
}

// DeleteKinResponse
//
// ## Fields
//
// - Ok if the Kin was deleted
message DeleteKinResponse {
}

// UpdateKinActivatedRequest
//
// ## Fields
//
// - kin_id: Kin id
// - activated: Kin activated status
message UpdateKinActivatedRequest {
  // kin_id: Kin id
  string kin_id = 1;
  // activated: Kin activated status
  bool activated = 2;
}

// UpdateKinActivatedResponse
//
// ## Returns
//
// - Ok if the Kin was updated
message UpdateKinActivatedResponse {
}

// UpdateKinNameRequest
//
// ## Fields
//
// - kin_id: Kin id
// - name: Kin name
message UpdateKinNameRequest {
  // kin_id: Kin id
  string kin_id = 1;
  // name: Kin name
  string name = 2;
}

// UpdateKinNameResponse
//
// ## Returns
//
// - Ok if the Kin name was updated
message UpdateKinNameResponse {
}

// UpdateKinDescriptionRequest
//
// ## Fields
//
// - kin_id: Kin id
// - description: Kin description
message UpdateKinDescriptionRequest {
  // kin_id: Kin id
  string kin_id = 1;
  // description: Kin description
  string description = 2;
}

// UpdateKinDescriptionResponse
//
// ## Returns
//
// - Ok if the Kin description was updated
message UpdateKinDescriptionResponse {
}

// UpdateKinOriginAddressRequest
//
// ## Fields
//
// - kin_id: Kin id
// - origin_address: Kin origin address
message UpdateKinOriginAddressRequest {
  // kin_id: Kin id
  string kin_id = 1;
  // origin_address: Kin origin address
  string origin_address = 2;
}

// UpdateKinOriginAddressResponse
//
// ## Returns
//
// - Ok if the Kin origin address was updated
message UpdateKinOriginAddressResponse {
}

// UpdateKinImageRequest
//
// ## Fields
//
// - kin_id: Kin id
// - image: Kin image
message UpdateKinImageRequest {
  // kin_id: Kin id
  string kin_id = 1;
  // image: Kin image
  digitalkin.common.v1.File image = 2;
}

// UpdateKinImageResponse
//
// ## Returns
//
// - image: Kin image path
message UpdateKinImageResponse {
  // image: Kin image path
  string image = 1;
}

// CreateKinReviewRequest
//
// ## Fields
//
// - kin_id: Kin id
// - user_name: User name
// - user_avatar: User avatar
// - review: Review
// - review_comment: Review comment
message CreateKinReviewRequest {
  // kin_id: Kin id
  string kin_id = 1;
  // user_name: User name
  string user_name = 2;
  // user_avatar: User avatar
  optional string user_avatar = 3;
  // review: Review
  int64 review = 4;
  // review_comment: Review comment
  optional string review_comment = 5;
}

// UpdateKinReviewRequest
//
// ## Fields
//
// - id: Review id
// - kin_id: Kin id
// - review: Review
// - review_comment: Review comment
message UpdateKinReviewRequest {
  // id: Review id
  string id = 1;
  // kin_id: Kin id
  string kin_id = 2;
  // review: Review
  int64 review = 3;
  // review_comment: Review comment
  optional string review_comment = 4;
}

// UpdateKinReviewResponse
//
// ## Returns
//
// - Ok if the review was updated
message UpdateKinReviewResponse {
}

// UpdateKinInterfaceRequest
//
// ## Fields
//
// - kin_id: Kin id
// - interface_url: Interface url
message UpdateKinInterfaceRequest {
  // kin_id: Kin id
  string kin_id = 1;
  // interface_url: Interface url
  string interface_url = 2;
}

// UpdateKinInterfaceResponse
//
// ## Returns
//
// - Ok if the link was updated
message UpdateKinInterfaceResponse {
}
